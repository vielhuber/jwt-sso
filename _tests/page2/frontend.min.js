(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

document.addEventListener('DOMContentLoaded', function () {
    var api = new jwtbutler({
        auth_server: 'http://example-auth-server.local',
        sso: ['http://example-auth-page1.local', 'http://example-auth-page2.local', 'http://example-auth-page3.local']
    });

    function updateStatus() {
        var payload = api.getPayload();
        document.querySelector('.status').innerHTML = (0, _stringify2.default)(payload);
        if (payload === null) {
            document.querySelector('.status').classList.add('null');
            document.querySelector('.status').classList.remove('not-null');
        } else {
            document.querySelector('.status').classList.add('not-null');
            document.querySelector('.status').classList.remove('null');
        }
    }

    updateStatus();

    document.querySelector('.isLoggedIn').addEventListener('click', function (e) {
        console.log(api.isLoggedIn());
        e.preventDefault();
    }, false);

    document.querySelector('.getPayload').addEventListener('click', function (e) {
        console.log(api.getPayload());
        e.preventDefault();
    }, false);

    document.querySelector('.getUserId').addEventListener('click', function (e) {
        console.log(api.getUserId());
        e.preventDefault();
    }, false);

    document.querySelector('.fetch1').addEventListener('click', function (e) {
        api.fetch('http://example-auth-page1.local/protected/', { method: 'GET' }).then(function (res) {
            return res.json();
        }).catch(function (error) {
            return error;
        }).then(function (response) {
            console.log(response);updateStatus();
        });
        e.preventDefault();
    }, false);

    document.querySelector('.fetch2').addEventListener('click', function (e) {
        api.fetch('http://example-auth-page2.local/protected/', { method: 'GET' }).then(function (res) {
            return res.json();
        }).catch(function (error) {
            return error;
        }).then(function (response) {
            console.log(response);updateStatus();
        });
        e.preventDefault();
    }, false);

    document.querySelector('.fetch3').addEventListener('click', function (e) {
        api.fetch('http://example-auth-page3.local/protected/', { method: 'GET' }).then(function (res) {
            return res.json();
        }).catch(function (error) {
            return error;
        }).then(function (response) {
            console.log(response);updateStatus();
        });
        e.preventDefault();
    }, false);

    document.querySelector('.login').addEventListener('click', function (e) {
        api.login().then(function () {
            console.log('logged in!');updateStatus();
        });
        e.preventDefault();
    }, false);

    document.querySelector('.logout').addEventListener('click', function (e) {
        api.logout().then(function () {
            console.log('logged out!');updateStatus();
        });
        e.preventDefault();
    }, false);
});

},{"babel-runtime/core-js/json/stringify":2}],2:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/json/stringify"), __esModule: true };
},{"core-js/library/fn/json/stringify":3}],3:[function(require,module,exports){
var core = require('../../modules/_core');
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

},{"../../modules/_core":4}],4:[function(require,module,exports){
var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}]},{},[1]);
